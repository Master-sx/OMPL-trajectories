import matplotlib.pyplot as plt

### Input Parameters ###
obstacleFilename = 'obstacles.txt'  # obstacles generated by MSL (remove trailing empty lines)
policyFilename = 'policies4.txt'  # policy generated by MSL

### Global Variables ###

# Obstacles
obstacles = []

# Robots
# Each robot is represented by a trajectory
# Each trajectory is composed of a series of states
# Each state is composed of ([0] x-coordinate, [1] y-coordinate, [2] orientation [0-2pi)
robots = []

# Read files and split data by line
def readFile (filename):
    info = []
    with open(filename, 'r') as openFile:
        data = openFile.readlines()
        for line in data:
            info.append(line.split())
    return info

# Extract obstacles
def extractObstacles(info):
    # Each obstacle is a set of points on a line
    for line in info:
        points = []
        # Iterate over all points and add them to an array representing the obstacle
        for endpoint in line:
            point = []
            x, y = map(float, endpoint.strip('()').split(','))
            point.append(float(x))
            point.append(float(y))
            points.append(point)
        obstacles.append(points)

# Extract policy of each robot
def extractPolicies(info):
    trajectory = []
    
    for line in info:
        state = []
        state.append(float(line[0])) # x-coordinate
        state.append(float(line[1])) # y-coordinate
        state.append(float(line[2])) # angle
        
        trajectory.append(state)
    
    robots.append(trajectory)

# Plot the trajectories of each robot
def plotPaths():    
    # Iterate over every state of every robot
    for idx, robot in enumerate(robots):
        xs = []
        ys = []
        for state in robot:
            xs.append(state[0])
            ys.append(state[1])
        plt.plot(xs, ys, label='Robot: ' + str(idx))

    # Iterate over every point in every obstacle
    for polygon in obstacles:
        polygon.append(polygon[0])
        xs = []
        ys = []
        for i in range(len(polygon)):            
            xs.append(polygon[i][0])
            ys.append(polygon[i][1])
        plt.plot(xs, ys)

    plt.suptitle('Paths')
    plt.xlabel('x')
    plt.ylabel('y')
    plt.legend()
    plt.show()
    
extractObstacles(readFile(obstacleFilename))
extractPolicies(readFile(policyFilename))
plotPaths()
